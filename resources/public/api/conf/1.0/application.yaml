openapi: 3.0.3
info:
  title: Trader Goods Profile External APIs - OpenAPI 3.0
  version: 1.0.0
  description: |-
    Use the TGP API to submit trader goods-profile records to the Trader Goods
    Profile Service (TGP).

    The [Trader goods profile service
    guide](/guides/trader-goods-profile-service-guide/) contains a detailed
    overview of v1.0.0 of the API.
  contact: {}
servers:
  - url: https://test-api.service.hmrc.gov.uk
    description: Sandbox
  - url: https://api.service.hmrc.gov.uk
    description: Production
tags:
  - name: Goods records
    description: Information relating to goods records
  - name: Traders profile
    description: Information relating to traders profile
paths:
  /customs/traders/goods-profiles/{eori}/records:
    post:
      tags:
        - Goods records
      summary: Create a goods record for a trader goods-profile
      description: Create a goods record for the good that is being moved.
      operationId: createTraderGoodsProfileRecord
      parameters:
        - $ref: '#/components/parameters/xClientIdParam'
        - $ref: '#/components/parameters/eoriParam'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTGPRecordSchema'
        required: true
      responses:
        '201':
          description: TGP record was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTGPRecordResponseSchema'
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/xCorrelationIdHdr'
        '400':
          description: Bad Request; Incorrect request parameters provided.
        '401':
          description: Unauthorised; Credentials failed
        '403':
          description: Forbidden;   User was valid, but not allowed to perform this action
      security:
        - userRestricted:
            - trader-goods-profiles
    patch:
      parameters:
        - $ref: '#/components/parameters/authorisationParam'
        - $ref: '#/components/parameters/xFwdHostParam'
        - $ref: '#/components/parameters/dateParam'
        - $ref: '#/components/parameters/xClientIdParam'
        - $ref: '#/components/parameters/eoriParam'
      tags:
        - Goods records
      summary: Update an existing trader goods record
      description: Update an existing TGP record
      requestBody:
        description: Update an existent TGP record
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTGPRecordSchema'
        required: true
      responses:
        '200':
          description: OK;   Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTGPRecordResponseSchema'
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/xCorrelationIdHdr'
        '400':
          description: Bad Request; Incorrect request parameters provided.
        '401':
          description: Unauthorised; Credentials failed
        '403':
          description: Forbidden;   User was valid, but not allowed to perform this action
        '404':
          description: TGP record not found to update
      security:
        - userRestricted:
            - trader-goods-profiles
    put:
      parameters:
        - $ref: '#/components/parameters/authorisationParam'
        - $ref: '#/components/parameters/xFwdHostParam'
        - $ref: '#/components/parameters/dateParam'
        - $ref: '#/components/parameters/xClientIdParam'
        - $ref: '#/components/parameters/eoriParam'
      tags:
        - Goods records
      summary: Remove a trader's goods record
      description: Remove a Trader's goods record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoveTGPRecordSchema'
        required: true
      responses:
        '200':
          description: OK;   Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoveTGPRecordResponse'
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/xCorrelationIdHdr'
        '400':
          description: Bad Request; Incorrect request parameters provided.
        '401':
          description: Unauthorised; Credentials failed
        '403':
          description: Forbidden;   User was valid, but not allowed to perform this action
        '404':
          description: Good records not found to deactivate
      security:
        - userRestricted:
            - trader-goods-profiles
    get:
      parameters:
        - $ref: '#/components/parameters/authorisationParam'
        - $ref: '#/components/parameters/xFwdHostParam'
        - $ref: '#/components/parameters/dateParam'
        - $ref: '#/components/parameters/xClientIdParam'
        - $ref: '#/components/parameters/eoriParam'
        - $ref: '#/components/parameters/updatedSinceParam'
      tags:
        - Goods records
      summary: Get good records by EORI and updatedSince
      description: Helps read Good records
      responses:
        '200':
          description: OK;   Request completed successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateTGPRecordResponseSchema'
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/xCorrelationIdHdr'
        '400':
          description: Bad Request; Incorrect request parameters provided.
        '401':
          description: Unauthorised; Credentials failed
        '403':
          description: Forbidden;   User was valid, but not allowed to perform this action
        '404':
          description: TGP data not found for the search criteria
      security:
        - userRestricted:
            - trader-goods-profiles
  /customs/traders/goods-profiles/{eori}/records/{recordId}:
    get:
      parameters:
        - $ref: '#/components/parameters/authorisationParam'
        - $ref: '#/components/parameters/xFwdHostParam'
        - $ref: '#/components/parameters/dateParam'
        - $ref: '#/components/parameters/xClientIdParam'
        - $ref: '#/components/parameters/eoriParam'
        - $ref: '#/components/parameters/recordIdParam'
        - $ref: '#/components/parameters/updatedSinceParam'
      tags:
        - Goods records
      summary: Get good records by EORI and recordId
      description: Helps read Good records by EORI and recordId
      responses:
        '200':
          description: OK;   Request completed successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UpdateTGPRecordResponseSchema'
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/xCorrelationIdHdr'
        '400':
          description: Bad Request; Incorrect request parameters provided.
        '401':
          description: Unauthorised; Credentials failed
        '403':
          description: Forbidden;   User was valid, but not allowed to perform this action
        '404':
          description: TGP data not found for the search criteria
      security:
        - userRestricted:
            - trader-goods-profiles
  /customs/traders/goods-profiles/{eori}:
    put:
      parameters:
        - $ref: '#/components/parameters/authorisationParam'
        - $ref: '#/components/parameters/xFwdHostParam'
        - $ref: '#/components/parameters/dateParam'
        - $ref: '#/components/parameters/xClientIdParam'
        - $ref: '#/components/parameters/eoriParam'
      tags:
        - Traders profile
      summary: Maintain a trader's profile record
      description: Maintain a trader's profile record
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintainProfileRecordSchema'
        required: true
      responses:
        '200':
          description: OK; Request completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MaintainProfileRecordResponse'
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/xCorrelationIdHdr'
        '400':
          description: Bad Request; Incorrect request parameters provided.
        '401':
          description: Unauthorised; Credentials failed
        '403':
          description: Forbidden;   User was valid, but not allowed to perform this action
        '404':
          description: Maintain profile records not found to deactivate
      security:
        - userRestricted:
            - trader-goods-profiles
components:
  schemas:
    CreateTGPRecordSchema:
      type: object
      required:
        - eori
        - actorId
        - traderRef
        - comcode
        - goodsDescription
        - countryOfOrigin
        - category
        - comcodeEffectiveFromDate
      properties:
        eori:
          $ref: '#/components/schemas/eori'
        actorId:
          $ref: '#/components/schemas/actorId'
        traderRef:
          $ref: '#/components/schemas/traderRef'
        comcode:
          $ref: '#/components/schemas/comcode'
        goodsDescription:
          $ref: '#/components/schemas/goodsDescription'
        countryOfOrigin:
          $ref: '#/components/schemas/countryOfOrigin'
        category:
          $ref: '#/components/schemas/category'
        assessments:
          $ref: '#/components/schemas/assessments'
        supplementaryUnit:
          $ref: '#/components/schemas/supplementaryUnit'
        measurementUnit:
          $ref: '#/components/schemas/measurementUnit'
        comcodeEffectiveFromDate:
          $ref: '#/components/schemas/comcodeEffectiveFromDate'
        comcodeEffectiveToDate:
          $ref: '#/components/schemas/comcodeEffectiveToDate'
    UpdateTGPRecordSchema:
      type: object
      required:
        - eori
        - actorId
        - recordId
        - comcode
        - goodsDescription
        - countryOfOrigin
        - category
        - comcodeEffectiveFromDate
      properties:
        eori:
          $ref: '#/components/schemas/eori'
        actorId:
          $ref: '#/components/schemas/actorId'
        recordId:
          $ref: '#/components/schemas/recordId'
        traderRef:
          $ref: '#/components/schemas/traderRef'
        comcode:
          $ref: '#/components/schemas/comcode'
        goodsDescription:
          $ref: '#/components/schemas/goodsDescription'
        countryOfOrigin:
          $ref: '#/components/schemas/countryOfOrigin'
        category:
          $ref: '#/components/schemas/category'
        assessments:
          $ref: '#/components/schemas/assessments'
        supplementaryUnit:
          $ref: '#/components/schemas/supplementaryUnit'
        measurementUnit:
          $ref: '#/components/schemas/measurementUnit'
        comcodeEffectiveFromDate:
          $ref: '#/components/schemas/comcodeEffectiveFromDate'
        comcodeEffectiveToDate:
          $ref: '#/components/schemas/comcodeEffectiveToDate'
    RemoveTGPRecordSchema:
      type: object
      required:
        - recordId
        - eori
        - actorId
      properties:
        recordId:
          $ref: '#/components/schemas/recordId'
        eori:
          $ref: '#/components/schemas/eori'
        actorId:
          $ref: '#/components/schemas/actorId'
    MaintainProfileRecordSchema:
      required:
        - eori
        - ukimsNumber
      type: object
      properties:
        eori:
          $ref: '#/components/schemas/eori'
        actorId:
          $ref: '#/components/schemas/actorId'
        ukimsNumber:
          $ref: '#/components/schemas/ukimsNumber'
        nirmsNumber:
          $ref: '#/components/schemas/nirmsNumber'
        niphlNumber:
          $ref: '#/components/schemas/niphlNumber'
    CreateTGPRecordResponseSchema:
      required:
        - recordId
        - eori
        - actorId
        - traderRef
        - comcode
        - accreditationStatus
        - goodsDescription
        - countryOfOrigin
        - category
        - comcodeEffectiveFromDate
        - version
        - active
        - toReview
        - declarable
        - ukimsNumber
        - createdDateTime
        - updatedDateTime
      type: object
      properties:
        recordId:
          $ref: '#/components/schemas/recordId'
        eori:
          $ref: '#/components/schemas/eori'
        actorId:
          $ref: '#/components/schemas/actorId'
        traderRef:
          $ref: '#/components/schemas/traderRef'
        comcode:
          $ref: '#/components/schemas/comcode'
        accreditationStatus:
          $ref: '#/components/schemas/accreditationStatus'
        goodsDescription:
          $ref: '#/components/schemas/goodsDescription'
        countryOfOrigin:
          $ref: '#/components/schemas/countryOfOrigin'
        category:
          $ref: '#/components/schemas/category'
        assessments:
          $ref: '#/components/schemas/assessments'
        supplementaryUnit:
          $ref: '#/components/schemas/supplementaryUnit'
        measurementUnit:
          $ref: '#/components/schemas/measurementUnit'
        comcodeEffectiveFromDate:
          $ref: '#/components/schemas/comcodeEffectiveFromDate'
        comcodeEffectiveToDate:
          $ref: '#/components/schemas/comcodeEffectiveToDate'
        version:
          $ref: '#/components/schemas/version'
        active:
          $ref: '#/components/schemas/active'
        toReview:
          $ref: '#/components/schemas/toReview'
        reviewReason:
          $ref: '#/components/schemas/reviewReason'
        declarable:
          $ref: '#/components/schemas/declarable'
        ukimsNumber:
          $ref: '#/components/schemas/ukimsNumber'
        nirmsNumber:
          $ref: '#/components/schemas/nirmsNumber'
        niphlNumber:
          $ref: '#/components/schemas/niphlNumber'
        createdDateTime:
          $ref: '#/components/schemas/createdDateTime'
        updatedDateTime:
          $ref: '#/components/schemas/updatedDateTime'
    UpdateTGPRecordResponseSchema:
      required:
        - eori
        - actorId
        - recordId
        - comcode
        - goodsDescription
        - countryOfOrigin
        - category
        - supplementaryUnit
        - measurementUnit
        - comcodeEffectiveFromDate
        - version
        - state
        - declarable
        - ukimsNumber
        - nirmsNumber
        - niphlNumber
        - createdDateTime
        - updatedDateTime
      type: object
      properties:
        eori:
          $ref: '#/components/schemas/eori'
        actorId:
          $ref: '#/components/schemas/actorId'
        recordId:
          $ref: '#/components/schemas/recordId'
        traderRef:
          $ref: '#/components/schemas/traderRef'
        comcode:
          $ref: '#/components/schemas/comcode'
        accreditationStatus:
          $ref: '#/components/schemas/accreditationStatus'
        accreditationWithdrawalReason:
          type: string
          description: >-
            To be provided when accreditationStatus has been set to "Null" from
            "Accreditation requested" which withdraws the accreditation request.
          example: Advice received by webchat, no longer needed
        goodsDescription:
          $ref: '#/components/schemas/goodsDescription'
        countryOfOrigin:
          $ref: '#/components/schemas/countryOfOrigin'
        category:
          $ref: '#/components/schemas/category'
        assessments:
          $ref: '#/components/schemas/assessments'
        supplementaryUnit:
          $ref: '#/components/schemas/supplementaryUnit'
        measurementUnit:
          $ref: '#/components/schemas/measurementUnit'
        comcodeEffectiveFromDate:
          $ref: '#/components/schemas/comcodeEffectiveFromDate'
        comcodeEffectiveToDate:
          $ref: '#/components/schemas/comcodeEffectiveToDate'
        version:
          $ref: '#/components/schemas/version'
        active:
          $ref: '#/components/schemas/active'
        declarable:
          $ref: '#/components/schemas/declarable'
        toReview:
          $ref: '#/components/schemas/toReview'
        reviewReason:
          $ref: '#/components/schemas/reviewReason'
        ukimsNumber:
          $ref: '#/components/schemas/ukimsNumber'
        nirmsNumber:
          $ref: '#/components/schemas/nirmsNumber'
        niphlNumber:
          $ref: '#/components/schemas/niphlNumber'
        createdDateTime:
          $ref: '#/components/schemas/createdDateTime'
        updatedDateTime:
          $ref: '#/components/schemas/updatedDateTime'
    RemoveTGPRecordResponse:
      required:
        - recordId
        - status
        - message
      type: object
      properties:
        recordId:
          $ref: '#/components/schemas/recordId'
        status:
          type: string
          example: OK
          description: Status of the request
        message:
          type: string
          example: Good record successfully deactivated
          description: Message describing the status of the request.
    MaintainProfileRecordResponse:
      required:
        - eori
        - actorId
        - ukimsNumber
        - nirmsNumber
        - niphlNumber
      type: object
      properties:
        eori:
          $ref: '#/components/schemas/eori'
        actorId:
          $ref: '#/components/schemas/actorId'
        ukimsNumber:
          $ref: '#/components/schemas/ukimsNumber'
        nirmsNumber:
          $ref: '#/components/schemas/nirmsNumber'
        niphlNumber:
          $ref: '#/components/schemas/niphlNumber'
    recordId:
      type: string
      format: uuid
      example: 8ebb6b04-6ab0-4fe2-ad62-e6389a8a204f
      description: ID of the record for the TGP Product in the TGP Core database (UUID)
    eori:
      type: string
      minLength: 14
      maxLength: 17
      example: GB123456789012
      description: >-
        Identity of the trader as known to HMRC. In the UK this is the 14-17
        character EORI number.
    actorId:
      type: string
      minLength: 14
      maxLength: 17
      example: GB987654321098
      description: >-
        EORI number of the user making the change, which may be different to the
        trader.
    traderRef:
      type: string
      minLength: 1
      maxLength: 512
      example: SKU123456
      description: >-
        Unique product reference used by the trader to identify the goods. For
        example a Stock Keeping Unit (SKU) code.
    comcode:
      type: string
      minLength: 6
      maxLength: 10
      example: 123456
      description: A code specific to goods that is internationally recognised.
    accreditationStatus:
      type: string
      minLength: 1
      maxLength: 35
      description: >-
        Indicates the accreditation status of a record if the trader has
        requested that HMRC review their commodity code.
      example: Not Requested
      enum:
        - Not Requested
        - Requested
        - In progress
        - Information Requested
        - Withdrawn
        - Approved
        - Rejected
    goodsDescription:
      type: string
      minLength: 1
      maxLength: 512
      example: Bananas
      description: >-
        Description of the goods using terminology that is familiar to the
        trader. For example, Bananas or T-Shirts.
    countryOfOrigin:
      type: string
      minLength: 2
      maxLength: 2
      example: GB
      description: >-
        Country where the product came from. This is a char field with 2 letters
        in it as per ISO 3166 standards.
    category:
      type: integer
      minimum: 1
      maximum: 3
      example: 2
      description: >-
        The category of the goods based on applicable restrictions,
        prohibitions, or any exemptions the trader may hold.


        Valid Values 1,2,3
    assessments:
      description: >-
        Array of category assessment data describing the measures which apply to
        the trader's movement of goods, and how the trader is exempt (if
        applicable).
      type: array
      items:
        $ref: '#/components/schemas/Assessment'
    supplementaryUnit:
      type: number
      example: 13
      description: >-
        Supplementary units are used to provide quantity of goods. For example,
        13.
    measurementUnit:
      type: string
      minLength: 1
      maxLength: 255
      example: Kilograms
      description: >-
        Measurement units are used when an additional measurement unit is needed
        on customs declarations.
    comcodeEffectiveFromDate:
      type: string
      format: date-time
      pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$
      example: 2023-01-0100:00:OOZ
      description: >-
        Date in the (OTT) when authorised usage of a commodity code came into
        effect.
    comcodeEffectiveToDate:
      type: string
      format: date-time
      pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$
      example: 2023-01-01700:00:OOZ
      description: >-
        Date in the (OTT) when authorised usage of a commodity code expired or
        will expire.
    version:
      type: integer
      format: int64
      description: Version of the TGP Product
      example: 1
    active:
      type: boolean
      example: true
      description: Status of the TGP Product
    toReview:
      type: boolean
      example: false
      description: Notification of whether the trader needs to review the record
    reviewReason:
      type: string
      minLength: 1
      maxLength: 512
      example: Commodity code changed
      description: Reason for toReview being true
    declarable:
      type: string
      minLength: 1
      maxLength: 100
      example: IMMI declarable
      description: Status of TGP Product record for declarations.
    ukimsNumber:
      type: string
      minLength: 32
      maxLength: 32
      example: XIUKIM47699357400020231115081800
      description: UK Internal Market Scheme registration number
    nirmsNumber:
      type: string
      minLength: 13
      maxLength: 13
      example: RMS-GB-123456
      description: Northern Ireland Retail Movement Scheme registration number
    niphlNumber:
      type: string
      minLength: 8
      maxLength: 8
      example: 6 S12345
      description: Northern Ireland Plant Health Label scheme registration number
    createdDateTime:
      type: string
      format: date-time
      pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$
      example: 2023-01-0100:00:OOZ
      description: Timestamp when the record was  created in B&T TGP Core database
    updatedDateTime:
      type: string
      format: date-time
      pattern: ^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}Z$
      example: 2023-01-0100:00:OOZ
      description: Timestamp when the record was  last updated in B&T TGP Core database
    Assessment:
      type: object
      properties:
        assessmentId:
          type: string
          minLength: 1
          maxLength: 35
          example: a06846e9a5f61fa4ecf2c4e3b23631fc
          description: >-
            The ID of the category assessment(s) retrieved from the OTT
            categorisation API
        primaryCategory:
          type: integer
          example: 1
          description: The primary category of the assessment
        condition:
          $ref: '#/components/schemas/Condition'
    Condition:
      description: >-
        A collection of data detailing the condition the trader meets to exempt
        the category assessment
      type: object
      properties:
        type:
          type: string
          minLength: 1
          maxLength: 35
          example: certificate
          description: >-
            The type of condition/exemption as provided by the OTT
            categorisation API
        conditionId:
          type: string
          minLength: 1
          maxLength: 10
          example: Y923
          description: >-
            The ID/code of the condition as provided by the OTT categorisation
            API
        conditionDescription:
          type: string
          minLength: 1
          maxLength: 512
          example: >-
            Products not considered as waste according to Regulation (EC) No
            1013/2006 as retained in UK law
          description: >-
            The description of the condition as provided by OTT categorisation
            API
        conditionTraderText:
          type: string
          minLength: 1
          maxLength: 512
          example: Excluded product
          description: >-
            A free text statement provided by the trader if required in the CDS
            guidance
  parameters:
    authorisationParam:
      in: header
      name: Authorisation
      schema:
        type: string
      required: true
      description: An OAuth 2.0 Bearer Token.
      example: Bearer 59fc92c1cdf0b8ef1f138a702effdbd2
    xFwdHostParam:
      in: header
      name: X-Forwarded-Host
      required: true
      schema:
        type: string
      description: >-
        The name or IP address of the application system that submitted the
        message.
      example: TSS
    dateParam:
      in: header
      name: Date
      required: true
      schema:
        type: string
        format: date-time
      description: >-
        The date and time that the message was originated(in "HTTP-date" format
        as defined by FRC 7231 Date/Time formats
      example: Sun, 06 Nov 2023 08:49:37 GMT
    xClientIdParam:
      in: header
      name: X-Client-ID
      required: true
      schema:
        type: string
      description: Identifier of calling system
      example: TSS
    eoriParam:
      in: path
      name: eori
      required: true
      schema:
        $ref: '#/components/schemas/eori'
      example: GB123456789012
      description: >-
        Identity of the trader as known to HMRC. In the UK this is the 14-17
        character EORI number.
    updatedSinceParam:
      in: query
      name: updatedSince
      description: >-
        Date value, all records after which have to be retrieved from the
        backend; This should use standard ISO8601 format (yyyy-mm-dd hh:mm:ssZ).
      schema:
        type: string
        format: date-time
        pattern: >-
          ^([1-9][0-9]{3})-(0[0-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])[T]([0-1][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])Z$
      example: 2024-11-18T23:20:19Z
    recordIdParam:
      in: path
      name: recordId
      required: true
      schema:
        type: string
        format: uuid
        minLength: 14
        maxLength: 17
      example: 8ebb6b04-6ab0-4fe2-ad62-e6389a8a204f
      description: >-
        Identity of the trader as known to HMRC. In the UK this is the
        17-character EORI number.
  headers:
    xCorrelationIdHdr:
      description: A unique id created at source, i.e. client to TGP Digital.
      required: true
      schema:
        type: string
        format: uuid
        example: 8ebb6b04-6ab0-4fe2-ad62-e6389a8a204f
  securitySchemes:
    userRestricted:
      type: oauth2
      description: >-
        HMRC supports OAuth 2.0 for authenticating user restricted API requests
        using an OAuth 2.0 Bearer Token in the AUTHORIZATION header. See
        https://developer.service.hmrc.gov.uk/api-documentation/docs/authorisation/user-restricted-endpoints
        for details.
      flows:
        authorizationCode:
          authorizationUrl: https://api.service.hmrc.gov.uk/oauth/authorize
          tokenUrl: https://api.service.hmrc.gov.uk/oauth/token
          refreshUrl: https://api.service.hmrc.gov.uk/oauth/refresh
          scopes:
            trader-goods-profiles: Access all aspects of TGP API
    applicationRestricted:
      type: oauth2
      description: >-
        HMRC supports OAuth 2.0 for authenticating application restricted API 
        requests using an OAuth 2.0 Bearer Token in the AUTHORIZATION header.
        See
        https://developer.service.hmrc.gov.uk/api-documentation/docs/authorisation/application-restricted-endpoints
        for details.
      flows:
        clientCredentials:
          tokenUrl: https://api.service.hmrc.gov.uk/oauth/token
          scopes:
            trader-goods-profiles: Access traders' goods profile and record via the TGP API
